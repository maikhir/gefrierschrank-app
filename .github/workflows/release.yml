name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Extract features for release notes
      id: features
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        
        # Determine if this is a beta/pre-release
        if [[ "$VERSION" == *"beta"* || "$VERSION" == *"alpha"* || "$VERSION" == *"rc"* ]]; then
          IS_PRERELEASE=true
          RELEASE_TYPE="Beta"
        else
          IS_PRERELEASE=false
          RELEASE_TYPE="Stable"
        fi
        
        # Extract features from FEATURES.md based on version
        if [[ "$VERSION" == v1.0* ]]; then
          SECTION="Core Features (Version 1.0)"
        elif [[ "$VERSION" == v1.1* ]]; then
          SECTION="Advanced Features (Version 1.1+)"
        elif [[ "$VERSION" == v1.2* ]]; then
          SECTION="Advanced Features (Version 1.1+)"
        elif [[ "$VERSION" == v2.0* ]]; then
          SECTION="Optional Features (Version 2.0+)"
        else
          SECTION="Core Features (Version 1.0)"
        fi
        
        # Create release notes from FEATURES.md
        if [ "$IS_PRERELEASE" = true ]; then
          cat > release_notes.md << EOF
        ## 🧪 $RELEASE_TYPE Release - $VERSION
        
        ⚠️ **This is a beta release for testing purposes. Please report any issues.**
        
        ### Features in this Beta:
        EOF
        else
          cat > release_notes.md << 'EOF'
        ## 🚀 Stable Release Features
        
        This release includes the following features from our roadmap:
        
        EOF
        fi
        
        # Extract completed features from the appropriate section
        awk -v section="$SECTION" '
        /^## / { current_section = $0; in_target = 0 }
        current_section ~ section { in_target = 1 }
        in_target && /^\| .* \| (✅|🚀)/ { 
          gsub(/^\| /, "- ✅ ")
          gsub(/ \| (✅|🚀).*/, "")
          print $0
        }
        ' FEATURES.md >> release_notes.md
        
        # Add links to documentation
        if [ "$IS_PRERELEASE" = true ]; then
          cat >> release_notes.md << 'EOF'
        
        ### 🧪 Beta Testing Guidelines
        
        - This is a **beta release** - expect potential bugs and issues
        - Please test in a non-production environment first
        - Report bugs with detailed steps to reproduce
        - Beta feedback is crucial for stable release quality
        
        ### 📚 Documentation
        
        - [Feature Roadmap](./FEATURES.md) - Complete feature list and status
        - [Development Guide](./CLAUDE.md) - Development setup and commands
        
        ### 🐛 Beta Bug Reports
        
        Found an issue in this beta? Please [create a bug report](https://github.com/maikhir/gefrierschrank-app/issues/new) with the label "beta".
        EOF
        else
          cat >> release_notes.md << 'EOF'
        
        ## 📚 Documentation
        
        - [Feature Roadmap](./FEATURES.md) - Complete feature list and status
        - [Development Guide](./CLAUDE.md) - Development setup and commands
        
        ## 🐛 Bug Reports
        
        Found a bug? Please [create an issue](https://github.com/maikhir/gefrierschrank-app/issues/new).
        
        ## 🔧 Hotfix Support
        
        Critical bugs in this stable release will be fixed in patch releases (e.g., v1.0.1, v1.0.2).
        
        ## 📧 Newsletter
        
        Thank you for using Gefrierschrank App! This stable release provides reliable functionality for managing your freezer inventory.
        EOF
        fi
        
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
        cat release_notes.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Build Backend (Maven)
      run: |
        cd backend
        chmod +x mvnw
        ./mvnw clean package -DskipTests
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: "Release ${{ steps.version.outputs.VERSION }}"
        body: ${{ steps.features.outputs.RELEASE_NOTES }}
        files: |
          backend/target/*.jar
          FEATURES.md
          CLAUDE.md
        generate_release_notes: true
        prerelease: ${{ contains(steps.version.outputs.VERSION, 'alpha') || contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'rc') }}
        make_latest: ${{ !contains(steps.version.outputs.VERSION, 'alpha') && !contains(steps.version.outputs.VERSION, 'beta') && !contains(steps.version.outputs.VERSION, 'rc') }}
        
    - name: Update Feature Status
      run: |
        # This could be extended to automatically update FEATURES.md
        # and mark implemented features as "Released" 
        echo "Release ${{ steps.version.outputs.VERSION }} created successfully"
        echo "Consider updating FEATURES.md to mark features as 📦 Released"