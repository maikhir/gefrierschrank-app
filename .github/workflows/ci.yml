name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Compile Backend
      run: |
        cd backend
        chmod +x mvnw
        ./mvnw clean compile
        
    - name: Run Backend Tests
      run: |
        cd backend
        ./mvnw test
        
    - name: Build Backend Package
      run: |
        cd backend
        ./mvnw package -DskipTests

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check if frontend exists
      run: |
        if [ ! -d "frontend" ] || [ ! -f "frontend/package.json" ]; then
          echo "Frontend not yet implemented, skipping frontend tests"
          exit 0
        fi
        
    - name: Set up Node.js
      if: hashFiles('frontend/package.json') != ''
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install Frontend Dependencies
      if: hashFiles('frontend/package.json') != ''
      run: |
        cd frontend
        npm ci
        
    - name: Lint Frontend Code
      if: hashFiles('frontend/package.json') != ''
      run: |
        cd frontend
        npm run lint || echo "Lint not configured yet"
        
    - name: Run Frontend Tests
      if: hashFiles('frontend/package.json') != ''
      run: |
        cd frontend
        npm test
        
    - name: Build Frontend
      if: hashFiles('frontend/package.json') != ''
      run: |
        cd frontend
        npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Backend Docker Image
      if: hashFiles('backend/Dockerfile') != ''
      run: |
        cd backend
        docker build -t gefrierschrank-app-backend:latest .
        
    - name: Build Frontend Docker Image  
      if: hashFiles('frontend/Dockerfile') != ''
      run: |
        cd frontend
        docker build -t gefrierschrank-app-frontend:latest .
        
    - name: Docker build summary
      run: |
        echo "âœ… Docker build step completed"
        echo "Backend Dockerfile exists: $([ -f backend/Dockerfile ] && echo 'Yes' || echo 'No')"
        echo "Frontend Dockerfile exists: $([ -f frontend/Dockerfile ] && echo 'Yes' || echo 'No')"