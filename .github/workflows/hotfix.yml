name: Hotfix Release

on:
  push:
    branches:
      - 'release/*'
      - 'hotfix/*'
  workflow_dispatch:
    inputs:
      base_version:
        description: 'Base version for hotfix (e.g., v1.0.0)'
        required: true
        type: string
      hotfix_description:
        description: 'Description of the hotfix'
        required: true
        type: string

jobs:
  create-hotfix-branch:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Create hotfix branch
      run: |
        BASE_VERSION="${{ github.event.inputs.base_version }}"
        HOTFIX_BRANCH="hotfix/${BASE_VERSION}"
        
        # Create hotfix branch from the release tag
        git checkout -b "$HOTFIX_BRANCH" "tags/$BASE_VERSION"
        git push origin "$HOTFIX_BRANCH"
        
        echo "Created hotfix branch: $HOTFIX_BRANCH"
        echo "Apply your bugfixes to this branch and create a new patch tag (e.g., ${BASE_VERSION}.1)"

  test-hotfix:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/hotfix/') || startsWith(github.ref, 'refs/heads/release/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run Backend Tests
      run: |
        cd backend
        chmod +x mvnw
        ./mvnw clean test
        
    - name: Build Backend
      run: |
        cd backend
        ./mvnw clean package -DskipTests
        
    - name: Run Security Scan
      run: |
        echo "Running security scan for hotfix..."
        # Add security scanning tools here if needed
        
    - name: Validate Hotfix
      run: |
        echo "âœ… Hotfix tests passed"
        echo "Ready for patch release tagging"